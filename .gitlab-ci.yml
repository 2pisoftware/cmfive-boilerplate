stages:
  - .pre
  - build
  - test

setup:
  image: alpine
  stage: .pre
  script: |
    echo "== Setting up environment =="
    if [ "$CI_COMMIT_REF_NAME" = "$CI_DEFAULT_BRANCH" ]; then
      export TAG="latest"
    elif [ $CI_MERGE_REQUEST_IID ]; then
      export TAG="mr-$CI_MERGE_REQUEST_IID"
    else
      export TAG=$CI_COMMIT_REF_SLUG
    fi
    export FULL_TAG=${CI_REGISTRY_IMAGE}:${TAG}
    echo "🏷️ DOCKER_TAG will be $FULL_TAG"
    echo "== Saving full tag name to tag.env =="
    echo "DOCKER_TAG=$FULL_TAG" > tag.env
    echo ""
    echo "== Setting up core branch =="
    if [ "$CI_COMMIT_REF_NAME" = "$CI_DEFAULT_BRANCH" ]; then
      export COSINE_CORE_BRANCH="main"
    else
      export COSINE_CORE_BRANCH="develop"
    fi
    echo "Core branch is $COSINE_CORE_BRANCH"
    echo "BUILT_IN_CORE_BRANCH=$COSINE_CORE_BRANCH" >> tag.env
    echo ""
  artifacts:
    reports:
      dotenv: tag.env

#add includes
include:
  - component: $CI_SERVER_FQDN/2pisoftware/pipelines/docker/build@v1.1.0
    inputs:
      tag: $DOCKER_TAG
      additional_args: --build-arg BUILT_IN_CORE_BRANCH=$BUILT_IN_CORE_BRANCH

  - component: $CI_SERVER_FQDN/2pisoftware/pipelines/playwright/test@v1.0.3
    inputs:
      directory: ./test/playwright/
      test_results_dir: ./test/playwright/test-results
      run_cmd: npm run build && npm run test
      # wait_on: https://localhost:80/ #http://test-website

playwright-test:
  services:
    - name: $DOCKER_TAG
      alias: test-website
    - mysql:8.0
  variables:
    # BASE_URL: https://localhost:80/ #http://test-website
    MYSQL_DATABASE: cmfive
    MYSQL_ROOT_PASSWORD: cmfive
  artifacts:
    paths: 
      - ./storage



