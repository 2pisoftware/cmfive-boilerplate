
*** Pull Codeception test branch cm5 boilerplate&core from git
*** Setup Codeception
*** Make sure Webdriver service is running (see cmfive-boilerplate\test\Codeception\readme.md)


---------------------------------------------------------------------
TestRunner for Codeception:
---------------------------------------------------------------------

From "boilerplate", use cmfiveTest.php.
Can do:
 - execute cmfiveTests.php
   - build & show all tests
 - execute cmfiveTests.php run 
   - build & run all tests
- execute cmfiveTests.php run [module]_[MyTest]Cest.php
   - build all but run only [MyTest]
- eg: execute cmfiveTests.php run boilerplate_HelperCest.php
   - build all and show all currently available Cest helper functions

Extend with:
cmfive-boilerplate\test\Codeception\tests\boilerplate\CmfiveUI.php
    --> base actor for all tests --> add functions supporting component/CSS level (not module actions!)
cmfive-boilerplate\test\Codeception\tests\boilerplate\acceptance\helpers\CmfiveSite.php
    --> base helper for all tests --> add functions related to instances & services (not CM5 features!)

Make tests:
General folder layout for tests (see cmfive-boilerplate\system\modules\admin\tests)
 /acceptance --> main Codeception test container
    - [MyTest]Cest.php files go in here
 /acceptance/helpers 
    - helpers go in here to be shared with other modules
 /acceptance/steps
    - custom actors go in here if needed, not shared with other modules

---------------------------------------------------------------------
TestRunner mechanical details:
---------------------------------------------------------------------

TestRunner (boilerplate/cmfiveTests.php) will seek from:
'PROJECT_MODULE_DIRECTORY' (testing CRM)
'SYSTEM_MODULE_DIRECTORY' (testing CORE)

Finding folders system/[module]/tests:

  - acceptance:
     location for this module's 'Cest' tests
     can be several files & several tests per file
     eg: someTestsCest.php

  - acceptance/helpers
     generic usefull functions supporting the module
     exposed in 'actor' to all tests for all modules
     does not contain 'actor' so needs to be passed "$I" by test code
     eg: Helper implements -->  function login($I,$username,$password) 
         Any Cest can say --> $I->login($I,$username,$password);

  - acceptance/steps
     allow extension to 'actor' specifically for this module's 'Cest' tests
     controls actor by "$this->" and exposes as "$I->" in Cest code
     eg: Cest implements -->  function testAnAspect(\Step\Acceptance\[NameOfStepActorClass] $I) 
         Cest has $I with functions from acceptance/steps/[NameOfStepActorClass].php
         Step implements -->  function doSpecialModuleThing($withThis,$andThat)
         Cest can say --> $I->doSpecialModuleThing($thisIs,$thatWas)

TestRunner also provides:
'WORKFLOWS_TEST_DIRECTORY' (abstract compound tests on CORE)

Finding folders system/tests/[workflows]:

  - acceptance
  - acceptance/helpers
  - acceptance/steps

And:
'BOILERPLATE_TEST_DIRECTORY' (testing CM5/$WEB)

Finding folder [boilerplate]:

  - CmfiveUI.php:
     base class of all test actors per acceptance.suite.dist.yml
     generic usefull functions related to page elements, CSS, conversions, Cmfive housekeeping
     nothing module specific in here!

  - acceptance:
     basic 'Cest' to confirm CM5 is up

  - acceptance/steps
     none needed

  - acceptance/helpers
     "CmfiveSite.php" containing universal support for all modules
     eg: login , clickCmfiveNavbar


------------------------------------------------------------------------------
